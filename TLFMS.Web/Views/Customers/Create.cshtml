@model TLFSupport.Model.CustomeModel.CustomerViewModel
@using TLFSupport.Resources
@using TLFSupport.Common
@using Kendo.Mvc.UI

@{
    if (!@Request.UrlReferrer.ToString().Contains("Customers"))
    {
        ViewBag.Title = "Manage Customer Details";

        Layout = "~/Views/Shared/_Partial_Layout.cshtml";
    }
    else
    {

        ViewBag.Title = "Manage Customer Details";

    }

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        @*<div class="form-group">
                <div class="col-md-5 col-xs-5 col-md-offset-7">

                    <input type="button" id="btnBackToCustomer" value="Back To Customer List" class="k-button" onclick="Redirect(this)" />
                </div>
            </div>*@
        <div class="form-group">
            <div class="col-md-2 col-xs-2">

                <b>@Html.LabelFor(model => model.Name, "Name")<span style="color:red;">*</span></b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.Name, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.ShortName, "Short Name")<span style="color:red;">*</span></b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.ShortName, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.ShortName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.Address1, "Address1")</b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextAreaFor(model => model.Address1, new { @class = "k-textbox" })
            </div>
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.Address2, "Address2")</b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextAreaFor(model => model.Address2, new { @class = "k-textbox" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.City, "City")<span style="color:red;">*</span></b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.City, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.City)
            </div>
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.State, "State")<span style="color:red;">*</span></b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.State, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.State)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.CountryName, "Country")<span style="color:red;">*</span></b>
            </div>
            <div class="col-md-3 col-xs-3">
                @*@Html.TextBoxFor(model => model.CountryName, new { @class = "k-textbox" })*@
                @(Html.Kendo().DropDownListFor(model => model.CountryId)
                    .Name("CountryId")
                    .HtmlAttributes(new { @data_value_primitive = "true" })
                    .OptionLabel(Lable.OptionLabel)
                    .DataTextField("CountryName")
                                  .DataValueField("CountryId")
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("ViewCountry", ControllerName.Customer);
                                          });
                                      })
                )
                @Html.ValidationMessageFor(model => model.CountryId)
            </div>
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.PinCode, "Pin Code")</b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.PinCode, new { @class = "k-textbox" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.PhoneNo, "Office Phone No")</b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.PhoneNo, new { @class = "k-textbox" })
            </div>
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.FaxNo, "Fax No")</b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.FaxNo, new { @class = "k-textbox" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.Email, "Email")</b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.Email, new { @class = "k-textbox" })
            </div>
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.WebSite, "Website")</b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.WebSite, new { @class = "k-textbox" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.OwnerName, "Owner")<span style="color:red;">*</span></b>
            </div>
            <div class="col-md-3 col-xs-3">
                @*@Html.TextBoxFor(model => model.OwnerName, new { @class = "k-textbox" })*@
                @(Html.Kendo().DropDownListFor(model => model.OwnerId)
                  .Name("OwnerId")
                                  .HtmlAttributes(new { @data_value_primitive = "true" })
                                  .OptionLabel(Lable.OptionLabel)
                                  .Filter(FilterType.Contains)
                          .DataTextField("OwnerName")
                                  .DataValueField("OwnerId")
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("ViewOwnerName", ControllerName.Customer).Data("filterOwner");
                                          });
                                      })
                )
                @Html.ValidationMessageFor(model => model.OwnerId)
            </div>
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.ContactPersonName, "Contact Person Name")<span style="color:red;">*</span></b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.ContactPersonName, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.ContactPersonName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.CS_DomainName, "Domain Name")<span style="color:red;">*</span></b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.CS_DomainName, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.CS_DomainName)
            </div>
            <div class="col-md-2 col-xs-2">
                <b>@Html.LabelFor(model => model.CS_DedicatedNumber, "Support No")<span style="color:red;">*</span></b>
            </div>
            <div class="col-md-3 col-xs-3">
                @Html.TextBoxFor(model => model.CS_DedicatedNumber, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.CS_DedicatedNumber)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-8 col-xs-8 col-md-offset-2">
                <input type="submit" value="Save" class="btn btn-primary" style="margin-right:20px;" />
                @if (!@Request.UrlReferrer.ToString().Contains("Customers"))
                {

                }
                else
                {
                    <input type="button" id="cancel" value="Cancel" class="btn btn-danger" onclick="Redirect(this)" />
                }
            </div>
        </div>
    </div>
}

<style>
    .k-list-filter .k-textbox {
        width: 89%;
    }
</style>
<script type="text/javascript">

    $(function () {
        $("form").kendoValidator();
    });

    function Redirect(e) {
        window.location.href = '@Url.Action("Index", ControllerName.Customer)';
    }

    function filterOwner() {
        return {
            filter: $("#OwnerId").data("kendoDropDownList").filterInput.val()
        };
    }
</script>
<script>
    $("form").kendoValidator({
        errorTemplate: "",
        validate: function (e) {

            var dropDowns = $(".k-dropdown");

            $.each(dropDowns, function (key, value) {
                var input = $(value).find("input.k-invalid");
                var span = $(this).find("span.k-dropdown-wrap");
                if (input.size() > 0) {
                    $(span).addClass("dropdown-validation-error");
                } else {
                    $(span).removeClass("dropdown-validation-error");
                }
            });
        }
    });</script>

<style>
    .k-tooltip-validation {
        visibility: hidden;
        display: none !important;
    }

    .k-widget > span.k-invalid,
    input.k-invalid {
        border: 1px solid red !important;
    }

    .dropdown-validation-error {
        border: 1px solid red !important;
        background-color: #fee !important;
    }
</style>